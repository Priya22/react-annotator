<form id="speaker"
                          onSubmit={this.onSubmit}
                    >
                        <h3>Select speaker:</h3>

                        <span>
                            <label>

                                <select
                                    value={this.state.selected_char}
                                    onChange={this.handleCharChange}
                                >
                                    {options}
                                </select>

                            </label>
                        </span>

                        <span>
                            <input type="submit" value="Submit" id="speaker"/>
                        </span>

                    </form>


 --------------------------------------------------------------------------------------------------------------------
 if (this.state.speaker_done === false) {

             return (
                 <div id="quote-options">
                     <SelectSpeaker
                         value={this.state.speaker}
                         done={this.state.speaker_done}
                         charList={testChars}
                         onChange={(event) => this.onInput(event)}
                         onSubmit={(event, arg) => this.onSubmit(event, arg)}
                     />
                 </div>
             )

         }
         // else {
         //     return (
         //         <div id='temp'>
         //             <h3>Speaker Done</h3>
         //         </div>
         //     )
         // }

         else if (this.state.speakee_done === false) {

             return (
                 <div id="quote-option">
                     <SelectSpeaker
                         value={this.state.speaker}
                         done={this.state.speaker_done}
                         charList={testChars}
                         onChange={(event) => this.onInput(event)}
                         onSubmit={(event, arg) => this.onSubmit(event, arg)}
                     />
                     <SelectSpeakee
                         value={this.state.speakee}
                         done={this.state.speakee_done}
                         charList={testChars}
                         onChange={(event) => this.onInput(event)}
                         onSubmit={(event, arg) => this.onSubmit(event, arg)}
                     />
                 </div>
             )
         }

         else if (this.state.ref_exp_done === false) {

             return (
                 <div id="quote-options">
                     <SelectSpeaker
                         value={this.state.speaker}
                         done={this.state.speaker_done}
                         charList={testChars}
                         onChange={(event) => this.onInput(event)}
                         onSubmit={(event, arg) => this.onSubmit(event, arg)}
                     />
                     <SelectSpeakee
                         value={this.state.speakee}
                         done={this.state.speakee_done}
                         charList={testChars}
                         onChange={(event) => this.onInput(event)}
                         onSubmit={(event, arg) => this.onSubmit(event, arg)}
                     />
                     <SelectRefExp
                         value={this.state.ref_exp}
                         done={this.state.ref_exp_done}
                         onChange={(event) => this.onInput(event)}
                         onSubmit={(event, arg) => this.onSubmit(event, arg)}
                     />
                 </div>

             )
         }

         if (this.state.quoteDone === false) {

             return (
                 <div id="quote-options">
                     <SelectSpeaker
                         value={this.state.speaker}
                         done={this.state.speaker_done}
                         charList={testChars}
                         onChange={(event) => this.onInput(event)}
                         onSubmit={(event, arg) => this.onSubmit(event, arg)}
                     />
                     <SelectSpeakee
                         value={this.state.speakee}
                         done={this.state.speakee_done}
                         charList={testChars}
                         onChange={(event) => this.onInput(event)}
                         onSubmit={(event, arg) => this.onSubmit(event, arg)}
                     />
                     <SelectRefExp
                         value={this.state.ref_exp}
                         done={this.state.ref_exp_done}
                         charList={testChars}
                         onChange={(event) => this.onInput(event)}
                         onSubmit={(event, arg) => this.onSubmit(event, arg)}
                     />
                     <QuoteSubmit
                         done={this.state.ref_exp_done}
                         onSubmit={(event) => this.onQuoteSubmit(event)}
                     />
                 </div>
             )
         }



<SelectSpeakee
                                value={this.state.speaker}
                                done={this.state.speaker_done}
                                charList={testChars}
                                onChange={(event) => this.onInput(event)}
                                onSubmit={(event, arg) => this.onSubmit(event, arg)}

                            />
                            <QuoteSubmit
                                onSubmit={(event) => this.onQuoteSubmit(event)}
                            />
                        </div>


                        <SelectRefExp
                                                        value={this.state.ref_exp}
                                                        done={this.state.ref_exp_done}
                                                        charList={testChars}
                                                        onChange={(event) => this.onInput(event)}
                                                        onSubmit={(event, arg) => this.onSubmit(event, arg)}
                                                    />
                                                    <QuoteSubmit
                                                        onSubmit={(event) => this.onQuoteSubmit(event)}
                                                    />




while ((cur < last) && ((i <= len) || (len === 0))) {
            let min_is_element = false;
            let min_start = start;
            let min_end = end;

            if (len !== 0 && i<len) {
                let element = cur_ranges[i];
                //console.log("Element: ", element);
                //console.log("Cur: ", cur);
                min_is_element = true;
                min_start = element[0];
                min_end = element[1];
                if ((start < min_start) && cur_done === false) {
                    min_start = start;
                    min_end = end;
                    min_is_element = false;
                }
            }
            //console.log("min_start: " + String(min_start)+ " Cur: " + String(cur));
            if (cur < min_start) {
                //console.log("Normal text.");
                //subs = '<span class = '+normal_class+'>' + text.substring(cur, min_start) + '</span>';
                //cur_html += subs;
                texts.push(text.substring(cur, min_start));
                classes.push(normal_class);
                ids.push('');
                cur = min_start;
            }
            else if (cur === min_start) {
                let id = '';
                let min_class = current_color;
                if (min_is_element === true) {
                    min_class = 'highlight-yellow';
                    if (cur_infos[i].speaker !== '') {
                        min_class = 'highlight-yellow-border';
                    }

                    if (cur_infos[i].sel_type === 'Mention') {
                        if (cur_infos[i].speakee.length === 0){
                            min_class = 'mention';
                        }
                        else {
                            min_class = 'mention-resolved';
                        }
                    }

                    id = i;
                    i = i + 1;
                }
                else {
                    cur_done = true;
                }
                //console.log("Found a selection! Color: " + min_class);

                //subs = '<span class = '+min_class+'>' + text.substring(min_start, min_end) + '</span>';
                if (min_class === 'highlight-yellow' || min_class === 'highlight-yellow-border' || min_class === 'mention' || min_class === 'mention-resolved') {
                    //subs = this.clickableSpan(text.substring(min_start, min_end), min_class, String(i-1));
                    texts.push(text.substring(min_start, min_end));
                    classes.push(min_class);
                    ids.push(i-1);
                    //console.log(subs);
                }
                else {
                    texts.push(text.substring(min_start, min_end));
                    classes.push(min_class);
                    ids.push('');
                }
                //cur_html += subs;
                //console.log("Adding highlights: ", subs);
                cur = min_end;

            }
        }